// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing temp Component matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Temp />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <TextField
          data-test="component-text"
          id="outlined-name"
          label="Name"
          margin="normal"
          onChange={[Function]}
          required={false}
          select={false}
          value="Cat in the Hat"
          variant="outlined"
        />,
        <div>
          Cat in the Hat
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "data-test": "component-text",
          "id": "outlined-name",
          "label": "Name",
          "margin": "normal",
          "onChange": [Function],
          "required": false,
          "select": false,
          "value": "Cat in the Hat",
          "variant": "outlined",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Cat in the Hat",
        },
        "ref": null,
        "rendered": "Cat in the Hat",
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <TextField
            data-test="component-text"
            id="outlined-name"
            label="Name"
            margin="normal"
            onChange={[Function]}
            required={false}
            select={false}
            value="Cat in the Hat"
            variant="outlined"
          />,
          <div>
            Cat in the Hat
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "data-test": "component-text",
            "id": "outlined-name",
            "label": "Name",
            "margin": "normal",
            "onChange": [Function],
            "required": false,
            "select": false,
            "value": "Cat in the Hat",
            "variant": "outlined",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Cat in the Hat",
          },
          "ref": null,
          "rendered": "Cat in the Hat",
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
